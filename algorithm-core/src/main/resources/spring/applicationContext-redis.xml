<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:spa="http://code.google.com/p/spring-property-annotations"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
				http://code.google.com/p/spring-property-annotations
				http://code.google.com/p/spring-property-annotations/spring-property-annotations-1.0.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd"
				default-autowire="byName">
	 <!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxTotal" value="${redis.pool.maxActive}"/>  
        <property name="maxIdle"  value="${redis.pool.maxIdle}"/>
		<property name="minIdle"  value="${redis.pool.minIdle}"/>  
        <property name="maxWaitMillis" value="${redis.pool.maxWait}"/>  
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>  
    </bean>
   
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="${notify.redis.url}" />        
		<constructor-arg index="2" value="${notify.redis.port}" />
		<constructor-arg index="3" value="${redis.timeout}" />
	</bean>  			
	
    <bean id="redisManager" class="com.lenovo.appstore.notify.common.cache.RedisManager" autowire-candidate="true">
		<property name="jedisPool" ref="jedisPool"/>
	</bean> --> 			
	
	<!-- 分离需要过期的缓存数据到单独的Redis 
    <bean id="dailyDataJedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="${userpoints.redis.dailydata.url}" />        
		<constructor-arg index="2" value="${userpoints.redis.dailydata.port}" />
		<constructor-arg index="3" value="${redis.timeout}" />
	</bean> 
	 			
    <bean id="dailyDataRedisManager" class="com.lenovo.appstore.userpoints.common.cache.RedisManager">
		<property name="jedisPool" ref="dailyDataJedisPool"/>
	</bean>-->
	
	<!-- 用户下载应用存储的Redis分片配置   -->	
	<bean id="shardInfo1" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg index="0" value="${userpoints.redis.app.shard1.ip}"/>
		<constructor-arg index="1" value="${userpoints.redis.app.shard1.port}" type="int"/>
	</bean>
	
	<bean id="shardInfo2" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg index="0" value="${userpoints.redis.app.shard2.ip}"/>
		<constructor-arg index="1" value="${userpoints.redis.app.shard2.port}" type="int"/>
	</bean>
	
	<bean id="shardInfo3" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg index="0" value="${userpoints.redis.app.shard3.ip}"/>
		<constructor-arg index="1" value="${userpoints.redis.app.shard3.port}" type="int"/>
	</bean>
	
	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig"/>
		<constructor-arg index="1">
			<list>
				<ref bean="shardInfo1"/>
				<ref bean="shardInfo2"/>
				<ref bean="shardInfo3"/>
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="redisManager" class="com.lenovo.appstore.notify.common.cache.RedisManager">
		<property name="shardedJedisPool" ref="shardedJedisPool"/>
	</bean> 
	
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxTotal" value="${redis.pool.maxActive}"/>  
        <property name="maxIdle"  value="${redis.pool.maxIdle}"/>  
        <property name="maxWaitMillis" value="${redis.pool.maxWait}"/>  
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>  
    </bean>	
 
	<bean id="jedisConnFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${userpoints.redis.url}"/>
		<property name="port" value="${userpoints.redis.port}"/>
		<property name="timeout" value="${redis.timeout}"/>
		<property name="poolConfig" ref="jedisPoolConfig"/>
	</bean>

	<!-- redis template definition -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
		<property name="connectionFactory" ref="jedisConnFactory"></property>
		<property name="keySerializer">             
		 	<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
	</bean>		
</beans>